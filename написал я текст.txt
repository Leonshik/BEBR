(слайд 1 - титульный лист)
Здравствуйте. Меня зовут Комельков Леонид, я учусь в группе "Основы программирования на языке C#" и сегодня демонстрирую вам свой итоговый проект - Генератор лабиринтов.

(слайд 2 - краткое описание программы, 1 скриншот либо схема, минимальный размер, максимальный размер, где вход, где выход)
Суть работы программы - генерация лабиринта заданного размера. Программа генерирует лабиринты размером от 2*2 клетки до 100*100, возможно и больше, но время ожидания завершения генерации не укладывается в рамки моего терпения.
В результате работы получается лабиринт указанных размеров, вход в который расположен внизу модели, а выход - вверху.

(слайд 3 - шаблоны из которых состоит лабиринт)
Лабиринт строится из шаблонов, шаблоны представлены на слайде: это вариации прямого и поворотного коридора с 1 входом и 1 выходом, Т-образного перекрёстка и четырёхстороннего перекрёстка.

(слайд 4 - скриншот или схема с базовым путём)
Этапы генерации следующие. Этап первый - генерация главного пути. Программа произвольно выбирает точку внизу будущей модели и начинает подниматься вверх, укладывая подходящие друг другу шаблоны. Генерация основного пути завершается, когда программа выложит последний подобранный шаблон, который имеет выход на край карты.

(слайд 5 - скриншот или схема, где добавлены базовые пути)
Этап второй - генерация дополнительных путей. Так как просто главный путь на карте так или иначе является коридором, необходимо визуально усложнить маршрут, чтобы главный путь не бросался в глаза. Для этого к каждому возможному ответвлению главного пути лабиринта создлаётся дополнительный путь. Таким образом на каждом из всех возможных участков пути появляется развилка.

(слайд 6 - финальный лабиринт)
Этап третий - на верхнем краю карты, выбираются все шаблоны, которые имеют выход вверх, далее из них выбирается один, и ему присваевается выход из лабиринта. Это нужно для того, чтобы ещё больше отклониться от изначального маршрута от входа к выходу. В результате получается более сложный вариант коридора, созданого на этапе 1.

(слайд 7 - финальный лабиринт, обрамлённый стенами)
Этап четвёртый - все края и незадействованные выходы из лабиринта закрываются стенами, образуя тупики. На этом фаза генерации завершена, лабиринт готов.

(слайд 8 - скриншот хода по лабиринту, метрика (как считать) и значения ->0 слишком легко, ->1 слишком сложно)
Так как создание лабиринта не было моей конечной целью, я решил добавить также возможность побродить по лабиринту, чтобы пользователь (я) имел возможность непосредственно оценить сложность. По завершению прохождения лабиринта, сообщается оценка, которая вычисляется следующим образом: пройденный путь в клетках разделённый на общее количество незанятых клеток. Метрика всё ещё дорабатывается, чтобы достовернее отображать результат. Если метрика раз за разом стремится к единице, то лабиринт слишком сложный, если к нулю - слишком простой.

(слайд 9 - планы на будущее)
Так как, повторюсь, моей конечной целью не было написание программы по генерации лабиринтов, данная работа является шагом, а не конечным пунктом. В планах на будущее использовать полученный опыт и куски кода, чтобы создавать уже не просто лабиринты, а полноценные локации различного профиля: городские улицы, интерьеры замков и зданий.

В ходе обучения на курсе и работы над проектом, я значительно углубил свои познания в языке, лучше познакомился с ранее известными инструментами, и теперь, в целом, лучше понимаю, как устроена работа программ.

(слайд 10 - спасибо за вминание)














здрасте, я делал лаберинт. Мною написанная программа создовала лаберинт с выходом на верхней стороне, с входом внизу и с размерами как минимум 2 на 2
(наверно будет вопрос"а почему нельзя зделать лаберинт 1 на1 и т.д"),
размер устанавливает пользователь. Позже по этому лаберинту можно будет передвигатся .После установки размеров, будет происходить поэтапная генерация сего лаберинта.
Образуется пространство с заданными ранее пользователем размерами, на котором лаберинт и будет генерироваться.Генерация состоит из трёх этапов. 
Этап первый - генерируется один главный путь ,состоящий из шаблонов, начиная с низа и обязательно до самого верха, это нужно для того что - бы гарантировано был выход из лаберинта,
но об этом чуть позже. Этап второй - от главного пути образуются другие, второстепенные пути задача которых заключается в заполнении оставшегося
пространства. Этап третий - в полученном в итоге лаберинте генерируется выход из лаберинта среди всех крайних верхних шаблонов, которые введут дальше вверх.
Также но уже снизу генерируется место с которого вы будете начинать бродить по лаберинт,только тут уже может быть абсолютно любой шаблон. Затем по краям 
лаберинта пустые проходы ведущие за края лаберинта заполняются стенами. И вуаля! После вам дадут походить по лаберинту и его пройти. Следом если вы пройдёте лаберинт вам
покажут то насколько быстро вы прошли лаберинт, если там 1 то это хначит что лаберинт получился довольно-таки лёгким.Я это добавил просто так, ибо ничего такого сложного
там нет. Я просто длинну лаберинта поделил на колличевство проиденных шагов.
Версии прогы:
1. Когда мне предлагали какой проэкт я буду делать,я выбрал именно самый интересный и бросающий ,на то время, для меня вызов, вариант... 
генерация лаберинта. Мне было интересно как происходят генерации карт,ланшафта и т.д. В первой версии ничего воопше для пользователя не происходило,
были лишь сфориулерованы некоторые правила для генерации.
2. Вторая версия программы воопше выдовала ощибки, но вся прелесть этой версии была в улучшенных и более проработанных правилах генерации лаберинта. 
3. В третьей версии уже начинает происходить что-то интересное. Программа с блеском выполняла первый этап генерации, так же она могла выводить получившися лаберинт
в виде символов и можно было понять как хорошо сгенерировался лаберинт. Следующие этапы генерации на тот момент были только в разработке.
4.Четвёртая версия могла производить уже второй и половина третьего этапа генерации, разве что генерировала она только квадратные лаберинты.
При попытке создать лаберинт других соотношений сторон, программа выдовала ошибку. Выполняла она половину третьего этапа так как выход и место появление уже в лаберинте 
определялись, НО края лаберинта не были "замурованы" стенами и вы могли выйти за пределы лаберинта и получив ощибку.
5. Пятая версия была финальной, был достигнут весь запланированный функционал. Программа создавала лаберинт, условно любых размеров, по нему можно было ходить и его пройти, 
никаких ощибок не видалось.
Вот такие вот дела. На самом деле этот проэкт дал мне именно то, что я хотел от него получить - опыт. Очередной опыт в работе с разными инструментами языка програмирования C#
и придумыванием алгоритмических цепочек. Очередной, так как этот опыт я получал на протяжении всего курса. Я очень сильно хотел изучить язык C# и занимался им до этого курса.
У меня всё же был некий опыт в C#, но потом я познакомился с данным курсом по програмировании C# и того самого опыта стало неимоверно много, если сравниватьт меня до и после.
Я планирую развиватся дальше, понимать и изучать больше разных инструментов в таком замечательном языке програмирования и принимать всё более интересные и немного,так сказать,
сложноватые вызовы.

